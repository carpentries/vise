[{"path":"https://zkamvar.github.io/vise/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2021 vise authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://zkamvar.github.io/vise/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Zhian N. Kamvar. Author, maintainer.","code":""},{"path":"https://zkamvar.github.io/vise/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Kamvar Z (2023). vise: Package Discovery Management Based 'renv'. R package version 0.0.0.9002, https://github.com/zkamvar/vise.","code":"@Manual{,   title = {vise: Package Discovery and Management Based on 'renv'},   author = {Zhian N. Kamvar},   year = {2023},   note = {R package version 0.0.0.9002},   url = {https://github.com/zkamvar/vise}, }"},{"path":"https://zkamvar.github.io/vise/index.html","id":"vise","dir":"","previous_headings":"","what":"Package Discovery and Management Based on renv","title":"Package Discovery and Management Based on renv","text":"vise vice mechanical apparatus used secure object allow work performed . https://en.wikipedia.org/wiki/Vise {vise} package thin wrapper around {renv}, {desc}, {remotes} designed manage update renv lockfiles project. explicitly works Carpentries lessons, extended use.","code":""},{"path":"https://zkamvar.github.io/vise/index.html","id":"features","dir":"","previous_headings":"","what":"Features","title":"Package Discovery and Management Based on renv","text":"ci_sysreqs() gather install system requirements {renv} lockfile de-duplicates system calls uses single command. ci_update() updates lockfile two ways: 1. scans project new packages 2. updates existing packages latest versions cran. useful creating pull requests changed lockfile trigger previews new package versions. lock2desc() convert lockfile DESCRIPTION file verify_simple_vector() verifies input vector actually simple vector malicious code.","code":""},{"path":"https://zkamvar.github.io/vise/reference/ci_sysreqs.html","id":null,"dir":"Reference","previous_headings":"","what":"detect and execute system requirements from a lockfile — ci_sysreqs","title":"detect and execute system requirements from a lockfile — ci_sysreqs","text":"function converts renv lockfile description file determines system requirements via remotes::system_requirements() using RStudio online resource. intended run continuous integration, probably error macos windows","code":""},{"path":"https://zkamvar.github.io/vise/reference/ci_sysreqs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"detect and execute system requirements from a lockfile — ci_sysreqs","text":"","code":"ci_sysreqs(   lockfile,   execute = TRUE,   sudo = TRUE,   exclude = c(\"git\", \"make\", \"pandoc\") )"},{"path":"https://zkamvar.github.io/vise/reference/ci_sysreqs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"detect and execute system requirements from a lockfile — ci_sysreqs","text":"lockfile path renv lockfile execute TRUE (default), commands remotes::system_requirements() executed via base::system(). sudo TRUE (default), command runs root exclude packages exclude installation already exist system.","code":""},{"path":"https://zkamvar.github.io/vise/reference/ci_sysreqs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"detect and execute system requirements from a lockfile — ci_sysreqs","text":"vector exectutible system calls install dependencies","code":""},{"path":"https://zkamvar.github.io/vise/reference/ci_sysreqs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"detect and execute system requirements from a lockfile — ci_sysreqs","text":"","code":"lock <- system.file(\"renv.lock\", package = \"vise\")  # The system requirements for a typical {knitr} installation vise::ci_sysreqs(lock, execute = FALSE) #> [1] \"ubuntu\" \"22.04\"  #> Error in match.arg(os_release, os_versions[[os]]): 'arg' should be one of “14.04”, “16.04”, “18.04”, “20.04”"},{"path":"https://zkamvar.github.io/vise/reference/ci_update.html","id":null,"dir":"Reference","previous_headings":"","what":"Update Packages in a renv lockfile in GitHub Actions — ci_update","title":"Update Packages in a renv lockfile in GitHub Actions — ci_update","text":"actively developed projects, can beneficial auto-update packages used project failsafe roll back versions case breaking changes need fixed. noramlly accomplished via function renv::update(), assumes new packages introduced workflow. function searches new packages, updates existing packages.","code":""},{"path":"https://zkamvar.github.io/vise/reference/ci_update.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update Packages in a renv lockfile in GitHub Actions — ci_update","text":"","code":"ci_update(profile = \"lesson-requirments\", update = \"true\", repos = NULL)"},{"path":"https://zkamvar.github.io/vise/reference/ci_update.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update Packages in a renv lockfile in GitHub Actions — ci_update","text":"profile profile renv project update character vector 'true' (default) 'false', indicates whether existing packages updated. repos repositories use search.","code":""},{"path":"https://zkamvar.github.io/vise/reference/lock2desc.html","id":null,"dir":"Reference","previous_headings":"","what":"convert a lockfile to a description file — lock2desc","title":"convert a lockfile to a description file — lock2desc","text":"default, take lockfile desc object convert equivalent DESCRIPTION file use packages check system dependencies.","code":""},{"path":"https://zkamvar.github.io/vise/reference/lock2desc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"convert a lockfile to a description file — lock2desc","text":"","code":"lock2desc(lockfile, desc = tempfile())"},{"path":"https://zkamvar.github.io/vise/reference/lock2desc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"convert a lockfile to a description file — lock2desc","text":"lockfile path renv lockfile desc::description() object. desc path new description file","code":""},{"path":"https://zkamvar.github.io/vise/reference/lock2desc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"convert a lockfile to a description file — lock2desc","text":"path new description file","code":""},{"path":"https://zkamvar.github.io/vise/reference/lock2desc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"convert a lockfile to a description file — lock2desc","text":"","code":"lock <- system.file(\"renv.lock\", package = \"vise\") lock2desc(lock) #> [1] \"/tmp/RtmpMEChPj/file165644c58398/DESCRIPTION\""},{"path":"https://zkamvar.github.io/vise/reference/verify_simple_vector.html","id":null,"dir":"Reference","previous_headings":"","what":"Verify that an input is a simple vector — verify_simple_vector","title":"Verify that an input is a simple vector — verify_simple_vector","text":"GitHub actions, can pass arbitrary R vector parse . Unfortunately, can lead insertion malicious code, function thrown error submitted R expression anything vector created c(),","code":""},{"path":"https://zkamvar.github.io/vise/reference/verify_simple_vector.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Verify that an input is a simple vector — verify_simple_vector","text":"","code":"verify_simple_vector(inputs)"},{"path":"https://zkamvar.github.io/vise/reference/verify_simple_vector.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Verify that an input is a simple vector — verify_simple_vector","text":"inputs R expression","code":""},{"path":"https://zkamvar.github.io/vise/reference/verify_simple_vector.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Verify that an input is a simple vector — verify_simple_vector","text":"nothing. called side-effect. inputs simple vector, error thrown.","code":""},{"path":"https://zkamvar.github.io/vise/reference/verify_simple_vector.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Verify that an input is a simple vector — verify_simple_vector","text":"","code":"# simple vectors work.  try(vise::verify_simple_vector(c(1, \"a\", c(TRUE, FALSE))))  # vectors using any other function fail, even if they are harmless try(vise::verify_simple_vector(c(1, print(\"a\"), c(TRUE, FALSE))))"},{"path":"https://zkamvar.github.io/vise/reference/vise-package.html","id":null,"dir":"Reference","previous_headings":"","what":"vise: Package Discovery and Management Based on 'renv' — vise-package","title":"vise: Package Discovery and Management Based on 'renv' — vise-package","text":"'renv' package wonderful tool managing projects extensible reliable. Vise serves opinionated implementation 'renv' provides one-function interface hydrate, restore, snapshot workflow.","code":""},{"path":[]},{"path":"https://zkamvar.github.io/vise/reference/vise-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"vise: Package Discovery and Management Based on 'renv' — vise-package","text":"Maintainer: Zhian N. Kamvar zkamvar@gmail.com (ORCID)","code":""},{"path":"https://zkamvar.github.io/vise/news/index.html","id":"vise-0009002","dir":"Changelog","previous_headings":"","what":"vise 0.0.0.9002","title":"vise 0.0.0.9002","text":"random delimiter set setting github output parameters shim renv 0.17.1 set fix broken package update reports.","code":""},{"path":"https://zkamvar.github.io/vise/news/index.html","id":"vise-0009001","dir":"Changelog","previous_headings":"","what":"vise 0.0.0.9001","title":"vise 0.0.0.9001","text":"ci_update() now sends output messages using GitHub’s environment variable syntax ci_update() now attempt re-try failed installations due missing system requirements. new function ci_new_pkg_sysreqs() take list packages attempt install system dependencies. lock2desc() now can also take description object place lockfile First tracked version {vise}","code":""}]
